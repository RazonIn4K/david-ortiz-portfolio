class ProgressiveEnhancement{static enhance(t,e){return class extends t{constructor(...t){super(...t),this.mongodb=null,this.analytics=null,this.initializeEnhancements(e)}async initializeEnhancements(t={}){"undefined"!=typeof AnalyticsTracker&&!1!==t.analytics&&(this.analytics=new AnalyticsTracker({debug:t.debug||!1})),this.features={mongodb:this.isMongoDBAvaible(),analytics:!!this.analytics,localStorage:this.isLocalStorageAvailable(),serviceWorker:"serviceWorker"in navigator},t.debug&&this.features}async enhancedMethod(t,e,...s){const r=Date.now();try{this.analytics&&this.analytics.track("method_execution_start",{method:e,className:this.constructor.name});const a=await t.apply(this,s);return this.analytics&&this.analytics.track("method_execution_success",{method:e,className:this.constructor.name,executionTime:Date.now()-r}),a}catch(t){throw this.analytics&&this.analytics.track("method_execution_error",{method:e,className:this.constructor.name,error:t.message,executionTime:Date.now()-r}),t}}isMongoDBAvaible(){return"undefined"!=typeof fetch&&"file:"!==window.location.protocol}isLocalStorageAvailable(){try{const t="__test__";return localStorage.setItem(t,t),localStorage.removeItem(t),!0}catch(t){return!1}}}}static enhanceFormValidator(t){return this.enhance(t,{analytics:!0})}static enhanceThemeManager(t){const e=this.enhance(t,{analytics:!0});return class extends e{toggleTheme(){const t=this.currentTheme,e=super.toggleTheme();return this.analytics&&this.analytics.track("theme_changed",{from:t,to:this.currentTheme,timestamp:Date.now()}),e}}}static enhanceSmoothNavigation(t){const e=this.enhance(t,{analytics:!0});return class extends e{handleNavClick(t){const e=t.target.getAttribute("href");return this.analytics&&this.analytics.track("navigation_click",{target:e,source:"smooth_navigation"}),super.handleNavClick(t)}}}}class EnhancedFormValidator{constructor(t,e={}){this.form=document.querySelector(t),this.errors={},this.options={enableMongoDB:!0,enableAnalytics:!0,apiEndpoint:"/api/contact",...e},this.options.enableAnalytics&&"undefined"!=typeof AnalyticsTracker&&(this.analytics=new AnalyticsTracker),this.form&&this.init()}init(){this.setupValidation(),this.setupSubmission(),this.analytics&&this.analytics.track("form_initialized",{formType:this.form.getAttribute("name")||"contact"})}setupValidation(){this.form.querySelectorAll("input, textarea").forEach(t=>{t.addEventListener("blur",()=>{this.validateField(t)}),t.addEventListener("input",()=>{this.clearFieldError(t)})})}setupSubmission(){this.form.addEventListener("submit",async t=>{t.preventDefault(),await this.handleSubmit()})}async handleSubmit(){if(!this.validateForm())return;const t=this.getFormData(),e=Date.now();try{let s;this.setLoadingState(!0),this.analytics&&this.analytics.track("form_submission_start",{formType:this.form.getAttribute("name")||"contact"}),s=this.options.enableMongoDB?await this.submitToMongoDB(t):await this.submitTraditional(t),this.analytics&&this.analytics.track("form_submission_success",{formType:this.form.getAttribute("name")||"contact",submissionTime:Date.now()-e,method:this.options.enableMongoDB?"mongodb":"traditional"}),this.showSuccess(s.message||"Thank you for your message!"),this.resetForm()}catch(t){console.error("Form submission error:",t),this.analytics&&this.analytics.track("form_submission_error",{formType:this.form.getAttribute("name")||"contact",error:t.message,submissionTime:Date.now()-e}),this.showError("Failed to send message. Please try again.")}finally{this.setLoadingState(!1)}}async submitToMongoDB(t){const e=await fetch(this.options.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!e.ok){const t=await e.json().catch(()=>({}));throw new Error(t.message||`HTTP ${e.status}`)}return await e.json()}async submitTraditional(t){const e=this.form.getAttribute("action");if(!e)throw new Error("No submission endpoint configured");const s=await fetch(e,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(t)});if(!s.ok)throw new Error(`HTTP ${s.status}`);return{success:!0,message:"Message sent successfully!"}}validateForm(){const t=this.form.querySelectorAll("input[required], textarea[required]");let e=!0;return t.forEach(t=>{this.validateField(t)||(e=!1)}),e}validateField(t){const e=t.value.trim(),s=t.getAttribute("name");if(this.clearFieldError(t),t.hasAttribute("required")&&!e)return this.setFieldError(t,`${s} is required`),!1;if("email"===t.type&&e){if(!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(e))return this.setFieldError(t,"Please enter a valid email address"),!1}if(e.length>0){const s=t.getAttribute("minlength"),r=t.getAttribute("maxlength");if(s&&e.length<parseInt(s))return this.setFieldError(t,`Minimum ${s} characters required`),!1;if(r&&e.length>parseInt(r))return this.setFieldError(t,`Maximum ${r} characters allowed`),!1}return!0}setFieldError(t,e){t.classList.add("error");let s=t.parentNode.querySelector(".field-error");s||(s=document.createElement("div"),s.className="field-error",t.parentNode.appendChild(s)),s.textContent=e}clearFieldError(t){t.classList.remove("error");const e=t.parentNode.querySelector(".field-error");e&&e.remove()}getFormData(){const t=new FormData(this.form),e={};for(const[s,r]of t.entries())e[s]=r;return e}setLoadingState(t){const e=this.form.querySelector('button[type="submit"]');t?(e.disabled=!0,e.textContent="Sending...",this.form.classList.add("loading")):(e.disabled=!1,e.textContent="Send Message",this.form.classList.remove("loading"))}showSuccess(t){this.showMessage(t,"success")}showError(t){this.showMessage(t,"error")}showMessage(t,e){const s=this.form.querySelector(".form-message");s&&s.remove();const r=document.createElement("div");r.className=`form-message form-message-${e}`,r.textContent=t,this.form.appendChild(r),setTimeout(()=>{r.remove()},5e3)}resetForm(){this.form.reset(),this.clearAllErrors()}clearAllErrors(){this.form.querySelectorAll(".field-error").forEach(t=>t.remove());this.form.querySelectorAll(".error").forEach(t=>t.classList.remove("error"))}}"undefined"!=typeof window&&(window.ProgressiveEnhancement=ProgressiveEnhancement,window.EnhancedFormValidator=EnhancedFormValidator,document.addEventListener("DOMContentLoaded",()=>{document.querySelector("#contact-form, .contact-form")&&(window.enhancedFormValidator=new EnhancedFormValidator("#contact-form, .contact-form"))})),"undefined"!=typeof module&&module.exports&&(module.exports={ProgressiveEnhancement:ProgressiveEnhancement,EnhancedFormValidator:EnhancedFormValidator});export{ProgressiveEnhancement,EnhancedFormValidator};