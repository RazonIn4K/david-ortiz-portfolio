class EnhancedAIChat{constructor(e={}){this.config={apiEndpoint:"/api/chat-log",analyticsEndpoint:"/api/analytics",fallbackToLocalStorage:!0,enableAnalytics:!0,debug:!1,...e},this.config.enableAnalytics&&"undefined"!=typeof AnalyticsTracker&&(this.analytics=new AnalyticsTracker({endpoint:this.config.analyticsEndpoint,debug:this.config.debug})),this.sessionId=this.getOrCreateSessionId(),this.conversationHistory=this.loadConversationHistory(),this.lastRequestTime=0,this.requestCount=0,this.rateLimitWindow=6e4,this.maxRequestsPerWindow=10,this.init()}init(){this.enhanceExistingChat(),this.setupEventListeners(),this.analytics&&this.analytics.track("chat_system_initialized",{sessionId:this.sessionId,hasExistingHistory:this.conversationHistory.length>0}),this.config.debug&&(this.sessionId,this.conversationHistory.length)}enhanceExistingChat(){const e=document.querySelector("#ai-chat-form"),t=document.querySelector("#chat-input"),s=document.querySelector("#chat-messages");e&&t&&(e.addEventListener("submit",e=>{e.preventDefault(),this.handleChatSubmission(t.value.trim())}),this.enhanceInputField(t)),s&&this.displayConversationHistory(s)}enhanceInputField(e){let t;e.addEventListener("input",()=>{clearTimeout(t),this.showTypingIndicator(!0),t=setTimeout(()=>{this.showTypingIndicator(!1)},1e3)}),this.addCharacterCounter(e),e.addEventListener("keydown",t=>{(t.ctrlKey||t.metaKey)&&"Enter"===t.key&&(t.preventDefault(),this.handleChatSubmission(e.value.trim())),"Escape"===t.key&&(e.value="",this.showTypingIndicator(!1))})}async handleChatSubmission(e){if(!e||0===e.length)return;if(!this.checkRateLimit())return void this.showError("Please wait before sending another message.");const t=Date.now();try{this.analytics&&this.analytics.track("chat_message_sent",{messageLength:e.length,sessionId:this.sessionId}),this.showThinkingIndicator(!0);const s=await this.sendToAI(e),n=Date.now()-t;this.logToMongoDB(e,s,n).catch(e=>{console.warn("Failed to log to MongoDB:",e)}),this.addToConversationHistory({type:"user",message:e,timestamp:new Date}),this.addToConversationHistory({type:"assistant",message:s,timestamp:new Date,responseTime:n}),this.displayMessage("user",e),this.displayMessage("assistant",s),this.analytics&&this.analytics.track("chat_response_received",{responseTime:n,responseLength:s.length,sessionId:this.sessionId})}catch(s){console.error("Chat error:",s),this.logToMongoDB(e,`Error: ${s.message}`,Date.now()-t,!0).catch(console.error),this.showError("Sorry, I encountered an error. Please try again."),this.analytics&&this.analytics.track("chat_error",{error:s.message,sessionId:this.sessionId})}finally{this.showThinkingIndicator(!1)}}async sendToAI(e){const t=await fetch("/api/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:e,sessionId:this.sessionId,history:this.conversationHistory.slice(-5)})});if(!t.ok)throw new Error(`HTTP ${t.status}: ${t.statusText}`);const s=await t.json();return s.response||s.message||"I apologize, but I could not generate a response."}async logToMongoDB(e,t,s,n=!1){if(this.config.apiEndpoint)try{const i={query:e,response:t,sessionId:this.sessionId,model:"grok-4-fast",responseTime:s,tokenCount:this.estimateTokenCount(e+t),errorOccurred:n,timestamp:(new Date).toISOString()},o=await fetch(this.config.apiEndpoint,{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(i),keepalive:!0});if(!o.ok)throw new Error(`Logging failed: ${o.status}`);const a=await o.json();return this.config.debug,a}catch(i){throw console.error("MongoDB logging error:",i),this.config.fallbackToLocalStorage&&this.saveToLocalStorage(e,t,s,n),i}}saveToLocalStorage(e,t,s,n){try{const i=JSON.parse(localStorage.getItem("chat_logs")||"[]");i.push({query:e,response:t,sessionId:this.sessionId,responseTime:s,errorOccurred:n,timestamp:(new Date).toISOString(),synced:!1}),i.length>50&&i.splice(0,i.length-50),localStorage.setItem("chat_logs",JSON.stringify(i)),this.config.debug}catch(e){console.error("localStorage save error:",e)}}checkRateLimit(){const e=Date.now();return e-this.lastRequestTime>this.rateLimitWindow&&(this.requestCount=0,this.lastRequestTime=e),!(this.requestCount>=this.maxRequestsPerWindow)&&(this.requestCount++,!0)}displayMessage(e,t){const s=document.querySelector("#chat-messages");if(!s)return;const n=document.createElement("div");n.className=`chat-message chat-message-${e}`,n.innerHTML=`\n      <div class="message-content">${this.escapeHtml(t)}</div>\n      <div class="message-timestamp">${(new Date).toLocaleTimeString()}</div>\n    `,s.appendChild(n),s.scrollTop=s.scrollHeight,requestAnimationFrame(()=>{n.classList.add("message-visible")})}showThinkingIndicator(e){let t=document.querySelector(".thinking-indicator");if(e&&!t){t=document.createElement("div"),t.className="thinking-indicator",t.innerHTML='\n        <div class="thinking-dots">\n          <span></span><span></span><span></span>\n        </div>\n        <span>Thinking...</span>\n      ';const e=document.querySelector("#chat-messages");e&&(e.appendChild(t),e.scrollTop=e.scrollHeight)}else!e&&t&&t.remove()}showTypingIndicator(e){this.config.debug}addCharacterCounter(e){const t=1e3,s=document.createElement("div");s.className="character-counter",s.textContent="0/1000",e.parentNode.appendChild(s),e.addEventListener("input",()=>{const n=e.value.length;s.textContent=`${n}/1000`,s.classList.toggle("warning",n>800),s.classList.toggle("error",n>t)})}showError(e){const t=document.createElement("div");t.className="chat-error",t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.remove()},5e3)}getOrCreateSessionId(){let e=sessionStorage.getItem("chat_session_id");return e||(e=`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,sessionStorage.setItem("chat_session_id",e)),e}loadConversationHistory(){try{const e=sessionStorage.getItem(`chat_history_${this.sessionId}`);return e?JSON.parse(e):[]}catch(e){return console.error("Failed to load conversation history:",e),[]}}addToConversationHistory(e){this.conversationHistory.push(e),this.conversationHistory.length>20&&(this.conversationHistory=this.conversationHistory.slice(-20));try{sessionStorage.setItem(`chat_history_${this.sessionId}`,JSON.stringify(this.conversationHistory))}catch(e){console.error("Failed to save conversation history:",e)}}displayConversationHistory(e){this.conversationHistory.forEach(e=>{this.displayMessage(e.type,e.message)})}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}estimateTokenCount(e){return Math.ceil(e.length/4)}setupEventListeners(){window.addEventListener("beforeunload",()=>{this.syncPendingLogs()}),window.addEventListener("online",()=>{this.syncPendingLogs()})}async syncPendingLogs(){try{const e=JSON.parse(localStorage.getItem("chat_logs")||"[]"),t=e.filter(e=>!e.synced);if(0===t.length)return;for(const e of t)try{await this.logToMongoDB(e.query,e.response,e.responseTime,e.errorOccurred),e.synced=!0}catch(e){console.error("Failed to sync log:",e)}localStorage.setItem("chat_logs",JSON.stringify(e)),this.config.debug&&t.length}catch(e){console.error("Sync error:",e)}}enableDebug(){this.config.debug=!0,this.analytics&&this.analytics.enableDebug()}getStats(){return{sessionId:this.sessionId,messageCount:this.conversationHistory.length,requestCount:this.requestCount,rateLimitWindow:this.rateLimitWindow,maxRequestsPerWindow:this.maxRequestsPerWindow}}}"undefined"!=typeof window&&(window.EnhancedAIChat=EnhancedAIChat,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{window.enhancedChat=new EnhancedAIChat}):window.enhancedChat=new EnhancedAIChat),"undefined"!=typeof module&&module.exports&&(module.exports=EnhancedAIChat);export default EnhancedAIChat;