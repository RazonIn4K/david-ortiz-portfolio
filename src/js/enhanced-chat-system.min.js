class e{constructor(e={}){this.config={apiEndpoint:"/api/lightweight-storage",analyticsEndpoint:"/api/analytics",fallbackToLocalStorage:!0,enableAnalytics:!0,debug:!1,...e},this.config.enableAnalytics&&(this.analytics=window.analytics||("undefined"!=typeof AnalyticsTracker?new AnalyticsTracker({endpoint:this.config.analyticsEndpoint,debug:this.config.debug}):null)),this.sessionId=this.getOrCreateSessionId(),this.conversationHistory=this.loadConversationHistory(),this.lastRequestTime=0,this.requestCount=0,this.rateLimitWindow=6e4,this.maxRequestsPerWindow=10,this.init()}init(){this.enhanceExistingChat(),this.setupEventListeners(),this.analytics&&this.analytics.track("chat_system_initialized",{sessionId:this.sessionId,hasExistingHistory:this.conversationHistory.length>0})}enhanceExistingChat(){const e=document.querySelector("#ai-chat-form"),t=document.querySelector("#chat-input"),s=document.querySelector("#chat-messages");e&&t&&(e.addEventListener("submit",e=>{e.preventDefault(),this.handleChatSubmission(t.value.trim())}),this.enhanceInputField(t)),s&&this.displayConversationHistory(s)}enhanceInputField(e){let t;e.addEventListener("input",()=>{clearTimeout(t),this.showTypingIndicator(!0),t=setTimeout(()=>{this.showTypingIndicator(!1)},1e3)}),this.addCharacterCounter(e),e.addEventListener("keydown",t=>{this.handleKeyboardShortcuts(t,e)})}async handleChatSubmission(e){if(!this.validateMessage(e))return;if(!this.validateRateLimit())return;const t=Date.now();try{this.trackMessageSent(e),this.showThinkingIndicator(!0);const s=await this.processMessage(e,t);await this.handleSuccessfulResponse(e,s,t)}catch(s){await this.handleResponseError(e,s,t)}finally{this.showThinkingIndicator(!1)}}validateMessage(e){return e&&e.length>0}validateRateLimit(){return!!this.checkRateLimit()||(this.showError("Please wait before sending another message."),!1)}async processMessage(e,t){const s=await this.sendToAI(e),n=Date.now()-t;return this.logInteraction(e,s,n).catch(e=>{this.config.debug&&console.debug("Failed to log interaction:",e)}),s}async handleSuccessfulResponse(e,t,s){const n=Date.now()-s;this.updateConversationHistory(e,t,n),this.updateChatUI(e,t),this.trackResponseReceived(t,n)}async handleResponseError(e,t,s){this.logInteraction(e,`Error: ${t.message}`,Date.now()-s,!0).catch(()=>{}),this.showError("Sorry, I encountered an error. Please try again."),this.trackError(t)}trackMessageSent(e){this.analytics&&this.analytics.track("chat_message_sent",{messageLength:e.length,sessionId:this.sessionId})}trackResponseReceived(e,t){this.analytics&&this.analytics.track("chat_response_received",{responseTime:t,responseLength:e.length,sessionId:this.sessionId})}trackError(e){this.analytics&&this.analytics.track("chat_error",{error:e.message,sessionId:this.sessionId})}updateConversationHistory(e,t,s){this.addToConversationHistory({type:"user",message:e,timestamp:new Date}),this.addToConversationHistory({type:"assistant",message:t,timestamp:new Date,responseTime:s})}updateChatUI(e,t){this.displayMessage("user",e),this.displayMessage("assistant",t)}handleKeyboardShortcuts(e,t){this.isSubmitShortcut(e)?(e.preventDefault(),this.handleChatSubmission(t.value.trim())):this.isClearShortcut(e)&&this.clearInput(t)}isSubmitShortcut(e){return(e.ctrlKey||e.metaKey)&&"Enter"===e.key}isClearShortcut(e){return"Escape"===e.key}clearInput(e){e.value="",this.showTypingIndicator(!1)}async sendToAI(e){if(!window.CONFIG?.ENABLE_AI_CHAT)return"Chat is currently unavailable. Please use the contact form.";const t=await fetch("/api/chat",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({message:e,sessionId:this.sessionId,history:this.conversationHistory.slice(-5)})});if(!t.ok){if(404===t.status)return"Chat is temporarily offline. Please reach me via the contact form.";throw new Error(`HTTP ${t.status}: ${t.statusText}`)}const s=await t.json();return s.response||s.message||"I apologize, but I could not generate a response."}async logInteraction(e,t,s,n=!1){return this.saveToLocalStorage(e,t,s,n),{success:!0}}saveToLocalStorage(e,t,s,n){try{const i=JSON.parse(localStorage.getItem("chat_logs")||"[]");i.push({query:e,response:t,sessionId:this.sessionId,responseTime:s,errorOccurred:n,timestamp:(new Date).toISOString(),synced:!1}),i.length>50&&i.splice(0,i.length-50),localStorage.setItem("chat_logs",JSON.stringify(i))}catch(i){}}checkRateLimit(){const e=Date.now();return e-this.lastRequestTime>this.rateLimitWindow&&(this.requestCount=0,this.lastRequestTime=e),!(this.requestCount>=this.maxRequestsPerWindow||(this.requestCount++,0))}displayMessage(e,t){const s=document.querySelector("#chat-messages");if(!s)return;const n=document.createElement("div");n.className=`chat-message chat-message-${e}`,n.innerHTML=`\n      <div class="message-content">${this.escapeHtml(t)}</div>\n      <div class="message-timestamp">${(new Date).toLocaleTimeString()}</div>\n    `,s.appendChild(n),s.scrollTop=s.scrollHeight,requestAnimationFrame(()=>{n.classList.add("message-visible")})}showThinkingIndicator(e){let t=document.querySelector(".thinking-indicator");if(e&&!t){t=document.createElement("div"),t.className="thinking-indicator",t.innerHTML='\n        <div class="thinking-dots">\n          <span></span><span></span><span></span>\n        </div>\n        <span>Thinking...</span>\n      ';const e=document.querySelector("#chat-messages");e&&(e.appendChild(t),e.scrollTop=e.scrollHeight)}else!e&&t&&t.remove()}showTypingIndicator(e){}addCharacterCounter(e){const t=document.createElement("div");t.className="character-counter",t.textContent="0/1000",e.parentNode.appendChild(t),e.addEventListener("input",()=>{const s=e.value.length;t.textContent=`${s}/1000`,t.classList.toggle("warning",s>800),t.classList.toggle("error",s>1e3)})}showError(e){const t=document.createElement("div");t.className="chat-error",t.textContent=e,document.body.appendChild(t),setTimeout(()=>{t.remove()},5e3)}getOrCreateSessionId(){let e=sessionStorage.getItem("chat_session_id");return e||(e=`session_${Date.now()}_${Math.random().toString(36).substr(2,9)}`,sessionStorage.setItem("chat_session_id",e)),e}loadConversationHistory(){try{const e=sessionStorage.getItem(`chat_history_${this.sessionId}`);return e?JSON.parse(e):[]}catch(e){return[]}}addToConversationHistory(e){this.conversationHistory.push(e),this.conversationHistory.length>20&&(this.conversationHistory=this.conversationHistory.slice(-20));try{sessionStorage.setItem(`chat_history_${this.sessionId}`,JSON.stringify(this.conversationHistory))}catch(t){}}displayConversationHistory(e){this.conversationHistory.forEach(e=>{this.displayMessage(e.type,e.message)})}escapeHtml(e){const t=document.createElement("div");return t.textContent=e,t.innerHTML}estimateTokenCount(e){return Math.ceil(e.length/4)}setupEventListeners(){window.addEventListener("beforeunload",()=>{this.syncPendingLogs()}),window.addEventListener("online",()=>{this.syncPendingLogs()})}async syncPendingLogs(){try{const e=JSON.parse(localStorage.getItem("chat_logs")||"[]"),t=e.filter(e=>!e.synced);if(0===t.length)return;for(const s of t)s.synced=!0;localStorage.setItem("chat_logs",JSON.stringify(e))}catch(e){}}enableDebug(){this.config.debug=!0,this.analytics&&this.analytics.enableDebug()}getStats(){return{sessionId:this.sessionId,messageCount:this.conversationHistory.length,requestCount:this.requestCount,rateLimitWindow:this.rateLimitWindow,maxRequestsPerWindow:this.maxRequestsPerWindow}}}"undefined"!=typeof window&&(window.EnhancedAIChat=e,"loading"===document.readyState?document.addEventListener("DOMContentLoaded",()=>{window.enhancedChat=new e}):window.enhancedChat=new e),"undefined"!=typeof module&&module.exports&&(module.exports=e);